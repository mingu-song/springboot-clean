package mingu.spring.clean.infrastructure.config.db.schema;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Getter;
import lombok.Setter;
import mingu.spring.clean.entity.customer.model.Customer;
import mingu.spring.clean.entity.customer.model.Sex;
import org.hibernate.validator.constraints.br.CPF;

import java.time.LocalDate;
import java.util.List;

@Getter
@Setter
@Entity
@Table(name = "Customer")
public class CustomerSchema extends UserSchema {

    @NotBlank
    @CPF(message = "{Size.customer.CPF}")
    @Column(unique = true)
    private String cpf;

    @NotBlank
//  @PhoneNumber(message = "{Size.customer.phone}")
    private String phoneNumber;

    @NotNull
    @Enumerated(EnumType.STRING)
    private Sex sex;

    //  @BirthDate(message = "{BirthDate.customer}")
    @Column(columnDefinition = "Date")
    private LocalDate birthdate;

    @OneToMany(cascade = CascadeType.REMOVE, mappedBy = "customer")
    private List<RentalSchema> rentals;

    public CustomerSchema() {
        this.role = "ROLE_CUSTOMER";
    }

    public CustomerSchema(Customer customer) {
        super(customer.getId(), customer.getUsername(), customer.getName(), customer.getEmail(), customer.getPassword());
        this.cpf = customer.getCpf();
        this.phoneNumber = customer.getPhoneNumber();
        this.sex = customer.getSex();
        this.birthdate = customer.getBirthdate();

        this.role = "ROLE_CUSTOMER";
    }

    public Customer toCustomer() {
        Customer customer = new Customer(this.getUsername(), this.getPassword(), this.getName(), this.getEmail(),
                this.cpf, this.phoneNumber, this.sex, this.birthdate);
        customer.setId(this.getId()); // transform the schema id (generated by database) to entity customer id
        return customer;
    }
}
